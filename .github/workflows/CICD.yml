name: CICD

on:
  push:
    branches: [ "main", "cicd" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Spring Boot 어플리케이션 Build
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # Docker 이미지 Build
    - name: Docker image build
      run: docker build -t ${{ secrets.DOCKER_ID }}/spring-cicd-test .

    # DockerHub Login (push 하기 위해)
    - name: Docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_ID }}
        password: ${{ secrets.DOCKER_PW }}

    # Docker hub 로 push
    - name: Docker Hub push
      run: docker push ${{ secrets.DOCKER_ID }}/spring-cicd-test

    # EC2에 SSH 접속 및 배포
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_ID }}/spring-cicd-test

          docker stop spring-cicd-test || true
          docker rm spring-cicd-test || true

          docker run -d --name spring-cicd-test -p 80:8080 ${{ secrets.DOCKER_ID }}/spring-cicd-test

          docker system prune -af