## release-cicd.yml

name: Release CICD

on:
  push:
    branches: [ "main", "cicd" ]
  pull_request:
    branches: [ "main" ]

env:
  SPRING_PROFILES_ACTIVE: prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Set YML AND Credentials
      run: |
        mkdir -p src/main/resources
        echo "${{ secrets.CREDENTIALS }}" > src/main/resources/application-prod.yml
        find src

    - name: Build with Gradle Wrapper
      run: ./gradlew build -x test

    - name: Build Docker image
      env:
        DOCKER_IMAGE: ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_IMAGE_NAME }}
      run: |
        docker build --progress plain -t $DOCKER_IMAGE .
        echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> $GITHUB_ENV

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_ID }}
        password: ${{ secrets.DOCKER_PW }}

    - name: Push Docker image
      run: docker push ${{ env.DOCKER_IMAGE }}

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          docker pull ${{ env.DOCKER_IMAGE }}
          docker stop trip-designers-container || true
          docker rm trip-designers-container || true
          docker run -d --name trip-designers-container \
            -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=prod \
            --restart unless-stopped \
            ${{ env.DOCKER_IMAGE }}
          docker system prune -af

    - name: Verify Deployment
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          sleep 30
          if [ $(docker ps -q -f name=trip-designers-container) ]; then
            echo "Container is running"
            exit 0
          else
            echo "Container is not running"
            exit 1
          fi